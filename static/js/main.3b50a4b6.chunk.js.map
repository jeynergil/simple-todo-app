{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","React","useEffect","alert","todo","id","title","completed","className","key","onChange","handler","type","checked","onClick","deleteHandler","style","fontStyle","color","opacity","textDecoration","TodoList","todos","map","t","Header","isInitialMount","useRef","bgColor","Math","floor","random","current","console","log","document","getElementById","innerHTML","backgroundColor","headerSpan","padding","lineHeight","fontSize","marginBottom","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addToProps","target","name","value","placeholder","TodoContainer","setTodo","show","setShow","axios","get","then","res","data","item","newTodo","uuidv4","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.3b50a4b6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nconst TodoItem = (props) => {\n//class TodoItem extends Component {\n    // componentWillUnmount() {\n    //     alert(\"Item about to be deleted!\");\n    //   }\n    //render() {\n        React.useEffect(() => {\n            return () => {\n              alert(\"Item about to be deleted!\")\n            }\n          }, [])\n        const completedStyle = {\n            fontStyle: \"italic\",\n            color: \"#d35e0f\",\n            opacity: 0.4,\n            textDecoration: \"line-through\",\n          }\n        const {id, title, completed } = props.todo;\n        return <li className=\"todo-item\" key={id}> \n                <input onChange={() => props.handler(id)} \n                    type=\"checkbox\" checked={completed}/> \n                <button onClick={() => props.deleteHandler(id)}>Delete</button>\n                <span style={completed ? completedStyle : null}>      \n                    {title}\n                </span>\n\n                </li>\n    //}\n}\n\nexport default TodoItem","import React, { Component } from 'react'\nimport TodoItem from './TodoItem'\n\nconst TodoList = (props) => {\n//class TodoList extends Component {\n\n    //render() {\n        //const todos = props.todos;\n        // const handler = props.handler;\n        // const deleteHandler = props.deleteHandler\n        return (\n            <ul>\n            {\n                props.todos.map(t => <TodoItem key={t.id} todo={t} handler={props.handler} deleteHandler={props.deleteHandler}/>)\n            }\n            </ul>\n        )\n    // }\n}\n\nexport default TodoList","import React , {Component} from 'react'\n\n// class Header extends Component {\n//     componentDidUpdate(prevProps, prevState) {\n//         // update logic here\n//         var x = Math.floor(Math.random() * 256);\n//   var y = Math.floor(Math.random() * 256);\n//   var z = Math.floor(Math.random() * 256);\n//   var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\n//         if (prevProps.headerSpan !== this.props.headerSpan) {\n//             console.log(\"props change\");\n//             document.getElementById(\"inH1\").innerHTML = \"clicked\";\n//             document.getElementById(\"inH1\").style.backgroundColor = bgColor;\n          \n//           }\n//     }\n//     render() {\n//         const headerStyle = {\n//             padding: \"20px 0\",\n//             lineHeight: \"2em\",\n//           }\n//         return  (\n//                     <header style={headerStyle}>\n//                          <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>Simple Todo App <span id=\"inH1\"></span></h1>\n//                          <p style={{ fontSize: \"19px\" }}>Please add to-dos item(s) through the input field</p>\n//                      </header>\n//                 ) \n//     }\n// }\nconst Header = (props) => {\n    const headerStyle = {\n        padding: \"20px 0\",\n        lineHeight: \"2em\",\n        }\n    const isInitialMount = React.useRef(true)\n    React.useEffect(()=>{\n        var x = Math.floor(Math.random() * 256);\n        var y = Math.floor(Math.random() * 256);\n        var z = Math.floor(Math.random() * 256);\n        var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n          } else {\n        //if (prevProps.headerSpan !== props.headerSpan) {\n            console.log(\"props change\");\n            document.getElementById(\"inH1\").innerHTML = \"clicked\";\n            document.getElementById(\"inH1\").style.backgroundColor = bgColor;\n        \n        //}\n          }\n    },[props.headerSpan])\n    return  (\n                <header style={headerStyle}>\n                        <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>Simple Todo App <span id=\"inH1\"></span></h1>\n                        <p style={{ fontSize: \"19px\" }}>Please add to-dos item(s) through the input field</p>\n                    </header>\n            ) \n}\n\n// const Header = () => {\n//     const headerStyle = {\n//         padding: \"20px 0\",\n//         lineHeight: \"2em\",\n//       }\n//     return  (\n//                 <header style={headerStyle}>\n//                      <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>Simple Todo App <span id=\"inH1\"></span></h1>\n//                      <p style={{ fontSize: \"19px\" }}>Please add to-dos item(s) through the input field</p>\n//                  </header>\n//             )\n// }\n// function Header() {\n//     return (\n//         <header>\n//             <h1>Simple Todo App</h1>\n//             <p>Please add to-dos item(s) through the input field</p>\n//         </header>\n//     )\n// }\n// const Header = () => \n//         <header>\n//             <h1>Simple Todo App</h1>\n//             <p>Please add to-dos item(s) through the input field</p>\n//         </header>\n\nexport default Header","import React, { Component } from 'react'\n\n// class InputTodo extends Component {\n//     state = {\n//         title: \"\"\n//     }\n//     inputTodo = e => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         })\n//     }\n//     handleSubmit = e => {\n//         e.preventDefault()\n//         console.log(this.state.title)\n//         this.props.addToProps(this.state.title);\n//         this.setState({\n//             title: \"\"\n//         })\n//     }\n//     render() {\n        \n//         return <div>\n//                 <form onSubmit={this.handleSubmit} className=\"form-container\">\n//                 <input className=\"input-text\" type=\"text\" onChange={this.inputTodo} placeholder=\"Add todo...\" name=\"title\" value={this.state.title}/> \n//                 <input className=\"input-submit\" type=\"submit\" /> \n//                 </form>\n//                 </div>\n//     }\n// }\n\nconst InputTodo = (props) => {\n    const [inputText, setInputText] = React.useState({\n        title: \"\",\n      })\n\n    const inputTodo = e => {\n        setInputText({\n            ...inputText,\n            [e.target.name]: e.target.value,\n          })\n        // this.setState({\n        //     [e.target.name]: e.target.value\n        // })\n    }\n    const handleSubmit = e => {\n        e.preventDefault()\n        //console.log(this.state.title)\n        props.addToProps(inputText.title);\n        setInputText({\n            title: \"\",\n          })\n        // this.setState({\n        //     title: \"\"\n        // })\n    }\n    console.log(React.useState(\"hello\"))\n    return (\n        <div>\n        <form onSubmit={handleSubmit} className=\"form-container\">\n                 <input className=\"input-text\" \n                        type=\"text\" \n                        onChange={inputTodo} \n                        placeholder=\"Add todo...\" \n                        name=\"title\" \n                        value={inputText.title}/> \n                 <input className=\"input-submit\" type=\"submit\" value=\"Submit\"/> \n                 </form>\n        </div>\n    )\n}\n\nexport default InputTodo","import React from 'react'\nimport TodoList from './TodoList'\nimport Header from './Header'\nimport InputTodo from './InputTodo'\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\n\nconst TodoContainer = () => {\n//class TodoContainer extends Component {\n    const [todos, setTodo] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    React.useEffect(\n        () => {\n            axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n                .then( (res) => {\n                    console.log(res.data)\n                    setTodo(res.data)\n                    // this.setState({\n                    //     todos: res.data\n                    // })\n                } )\n        },[]\n\n    );\n    // state = {\n    //     todos: [],\n    //     show: false\n    // }\n    const handleDelete = (id) => {\n        //delete any item that match the ID\n        console.log(\"Delete: \"+id)\n        //please take note filter  only shows the things that matches your condition\n        //so in a, b, c, d, e - if you want to delete c, you should only return a, b, d and e\n        setTodo([...todos.filter(\n            (todo)=> {\n                if(id === todo.id) {\n                    console.log(\"Deleting: \" +todo.id)\n                    //if you want to exclude, return false\n                    return false;\n                } else {\n                    //if you want to include to the new list, return true\n                    return true;\n                }\n            //return id != todo.id\n            }\n            )])\n        // this.setState(\n        //     {\n        //     todos: [\n        //             //this ... is to 'shift left' d and c since we deleted c\n        //             ...this.state.todos.filter(\n        //                 (todo)=> {\n        //                     if(id === todo.id) {\n        //                         console.log(\"Deleting: \" +todo.id)\n        //                         //if you want to exclude, return false\n        //                         return false;\n        //                     } else {\n        //                         //if you want to include to the new list, return true\n        //                         return true;\n        //                     }\n        //                 //return id != todo.id\n        //                 }\n        //                 )\n        //             ]\n        //     }\n        // )\n    }\n    // const handleDelete1 = (id) => {\n    //     //delete any item that match the ID\n    //     console.log(\"Delete: \"+id)\n    //     axios\n    //         .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    //         .then(reponse =>\n    //         this.setState({\n    //             todos: [\n    //             ...this.state.todos.filter(todo => {\n    //                 return todo.id !== id\n    //             }),\n    //             ],\n    //         })\n    //         )\n    // }\n    const handleChange = (id) => {\n        console.log(\"handleChange Clicked: \"+ id)\n        setShow(!show)\n        setTodo(todos.map(t => {\n            if(id === t.id) {\n                t.completed = !t.completed;\n            }\n            return t;\n        }))\n        // this.setState({\n        //     todos: this.state.todos.map(t => {\n        //         if(id === t.id) {\n        //             t.completed = !t.completed;\n        //         }\n        //         return t;\n        //     }),\n        //     //show: !this.state.show,\n        // })\n    }\n    const addTodoItem = (item) => {\n        const newTodo = {\n            id: uuidv4(),\n            title: item,\n            completed: false\n        };\n        console.log(item)\n        setTodo([...todos, newTodo])\n        // this.setState({\n        //     todos: [...this.state.todos, newTodo]\n        // }) \n        // axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n        //         title: item,\n        //         completed: false,\n        //     })\n        //     .then(response =>\n        //     this.setState({\n        //         todos: [...this.state.todos, response.data],\n        //     })\n        //     )\n    }\n    // const componentDidMount() {\n    //     console.log(\"Component Mounted\")\n    //     axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    //     .then( (res) => {\n    //         console.log(res.data)\n    //         setTodo(res.data)\n    //         // this.setState({\n    //         //     todos: res.data\n    //         // })\n    //     } )\n    // }\n    //render() {\n       \n        return (\n            <div className=\"container\">\n                <Header headerSpan={show}/>\n                <InputTodo addToProps={addTodoItem}/>\n                <TodoList handler={handleChange} todos={todos} deleteHandler={handleDelete}/>\n                \n            </div>\n        )\n    //}\n       \n}\n\nexport default TodoContainer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TodoContainer from './components/TodoContainer'\nimport \"./App.css\"\n\n//const elem = <h1>Help Lord Jesus!</h1>\n\nReactDOM.render(<TodoContainer/>,document.getElementById(\"root\"))"],"sourceRoot":""}